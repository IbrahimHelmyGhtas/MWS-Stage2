let restaurants,neighborhoods,cuisines;var map,lazyImageObserver,markers=[],firstload=!1;function lazyLoadImages(){Array.from(document.getElementsByClassName("lazy"));var e=[].slice.call(document.querySelectorAll("img.lazy"));"IntersectionObserver"in window&&(lazyImageObserver=new IntersectionObserver(function(e,t){e.forEach(function(e){if(e.isIntersecting){let t=e.target;t.src=t.dataset.src,t.srcset=t.dataset.srcset,t.classList.remove("lazy"),lazyImageObserver.unobserve(t)}})}),e.forEach(function(e){lazyImageObserver.observe(e)}))}document.getElementById("mapImage").addEventListener("click",function(e){initMap(),e.stopPropagation()}),document.addEventListener("DOMContentLoaded",e=>{init(),updateRestaurants(),fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fetchReviewsHTML=(()=>{DBHelper.fetchReviewsHTML((e,t)=>{e?console.error(e):(self.reviews=t,fillReviewsHTML(self.reviews))})}),fillReviewsHTML=((e=self.reviews)=>{console.log("rev test",e)}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),window.initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1})}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),s=e.selectedIndex,n=t.selectedIndex,r=e[s].value,a=t[n].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(r,a,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML(),lazyLoadImages())})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),1==firstload&&addMarkersToMap(),firstload=!0}),createRestaurantHTML=(e=>{const t=document.createElement("li"),s=document.createElement("img");s.classList.add("restaurant-img"),s.classList.add("lazy"),s.width="300px";const n=DBHelper.imageUrlForRestaurant(e);s.dataset.src=n;const r=n.substring(0,n.lastIndexOf(".")),a=n.substring(n.lastIndexOf("."),n.length);s.src="img/clear.webp",s.dataset.srcset=`${r}-300w${a} 300w,`+`${r}-550w${a} 550w`,s.dataset.sizes="(min-width: 1024px) 300px,(min-width: 720px) 300px,(min-width: 480px) 300px,(max-width: 479px) 550px",s.alt=`A view from the restaurant ${e.name}`,lazyImageObserver&&lazyImageObserver.observe(s),t.append(s);const o=document.createElement("h1");o.innerHTML=e.name,t.append(o);const l=document.createElement("p");l.innerHTML=e.neighborhood,t.append(l);const i=document.createElement("p");i.innerHTML=e.address,t.append(i);const c=document.createElement("a");return c.innerHTML="View Details",c.href=DBHelper.urlForRestaurant(e),t.append(c),t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})});